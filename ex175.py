'''
Подвиг 4. На вход программе поступают две строки. В каждой строке записаны слова через пробел. Прочитайте эти строки
и сохраните их в двух переменных.

Объявите функцию с двумя параметрами, которой передаются строки со словами и преобразовываются в два списка из слов.
Функция должна возвращать кортеж с этими списками в порядке: сначала первый список (первой строки), затем - второй.
Определите декоратор для этой функции, который из двух списков формирует словарь, в котором ключами являются слова
из первого списка, а значениями - соответствующие элементы из второго списка. Длины списков полагаются равными.
Полученный словарь должен возвращаться при вызове декоратора.
Примените декоратор к первой функции и вызовите ее для прочитанных строк. Результат (словарь d) отобразите
на экране командой:
print(*sorted(d.items()))
Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.11.4
Sample Input:
house river tree car
дом река дерево машина
Sample Output:
('car', 'машина') ('house', 'дом') ('river', 'река') ('tree', 'дерево')
'''
def decorator(func):
    def wrapper(*args, **kwargs):
        menu = func(*args, **kwargs)
        return dict(zip(menu[0], menu[1]))
        #print(*sorted(s.items()))
    return wrapper


@decorator
def get_str(a, b):
    return (a.split(), b.split())


a = 'house river tree car'
b = 'дом река дерево машина'
d = get_str(a, b)
print(*sorted(d.items()))
